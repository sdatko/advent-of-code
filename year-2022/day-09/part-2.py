#!/usr/bin/env python3
#
# --- Day 9: Rope Bridge / Part Two ---
#
# A rope snaps! Suddenly, the river is getting a lot closer than you remember.
# The bridge is still there, but some of the ropes that broke are now whipping
# toward you as you fall through the air!
#
# The ropes are moving too quickly to grab; you only have a few seconds
# to choose how to arch your body to avoid being hit. Fortunately,
# your simulation can be extended to support longer ropes.
#
# Rather than two knots, you now must simulate a rope consisting of ten knots.
# One knot is still the head of the rope and moves according to the series
# of motions. Each knot further down the rope follows the knot in front of it
# using the same rules as before.
#
# Using the same series of motions as the above example, but with the knots
# marked H, 1, 2, ..., 9, the motions now occur as follows:
#
#   == Initial State ==
#
#   ......
#   ......
#   ......
#   ......
#   H.....  (H covers 1, 2, 3, 4, 5, 6, 7, 8, 9, s)
#
#   == R 4 ==
#
#   ......
#   ......
#   ......
#   ......
#   1H....  (1 covers 2, 3, 4, 5, 6, 7, 8, 9, s)
#
#   ......
#   ......
#   ......
#   ......
#   21H...  (2 covers 3, 4, 5, 6, 7, 8, 9, s)
#
#   ......
#   ......
#   ......
#   ......
#   321H..  (3 covers 4, 5, 6, 7, 8, 9, s)
#
#   ......
#   ......
#   ......
#   ......
#   4321H.  (4 covers 5, 6, 7, 8, 9, s)
#
#   == U 4 ==
#
#   ......
#   ......
#   ......
#   ....H.
#   4321..  (4 covers 5, 6, 7, 8, 9, s)
#
#   ......
#   ......
#   ....H.
#   .4321.
#   5.....  (5 covers 6, 7, 8, 9, s)
#
#   ......
#   ....H.
#   ....1.
#   .432..
#   5.....  (5 covers 6, 7, 8, 9, s)
#
#   ....H.
#   ....1.
#   ..432.
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   == L 3 ==
#
#   ...H..
#   ....1.
#   ..432.
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   ..H1..
#   ...2..
#   ..43..
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   .H1...
#   ...2..
#   ..43..
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   == D 1 ==
#
#   ..1...
#   .H.2..
#   ..43..
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   == R 4 ==
#
#   ..1...
#   ..H2..
#   ..43..
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   ..1...
#   ...H..  (H covers 2)
#   ..43..
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   ......
#   ...1H.  (1 covers 2)
#   ..43..
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   ......
#   ...21H
#   ..43..
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   == D 1 ==
#
#   ......
#   ...21.
#   ..43.H
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   == L 5 ==
#
#   ......
#   ...21.
#   ..43H.
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   ......
#   ...21.
#   ..4H..  (H covers 3)
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   ......
#   ...2..
#   ..H1..  (H covers 4; 1 covers 3)
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   ......
#   ...2..
#   .H13..  (1 covers 4)
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   ......
#   ......
#   H123..  (2 covers 4)
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   == R 2 ==
#
#   ......
#   ......
#   .H23..  (H covers 1; 2 covers 4)
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
#   ......
#   ......
#   .1H3..  (H covers 2, 4)
#   .5....
#   6.....  (6 covers 7, 8, 9, s)
#
# Now, you need to keep track of the positions the new tail, 9, visits.
# In this example, the tail never moves, and so it only visits 1 position.
# However, be careful: more types of motion are possible than before,
# so you might want to visually compare your simulated rope to the one above.
#
# Here's a larger example:
#
#   R 5
#   U 8
#   L 8
#   D 3
#   R 17
#   D 10
#   L 25
#   U 20
#
# These motions occur as follows (individual steps are not shown):
#
#   == Initial State ==
#
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ...........H..............  (H covers 1, 2, 3, 4, 5, 6, 7, 8, 9, s)
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#
#   == R 5 ==
#
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ...........54321H.........  (5 covers 6, 7, 8, 9, s)
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#
#   == U 8 ==
#
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ................H.........
#   ................1.........
#   ................2.........
#   ................3.........
#   ...............54.........
#   ..............6...........
#   .............7............
#   ............8.............
#   ...........9..............  (9 covers s)
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#
#   == L 8 ==
#
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ........H1234.............
#   ............5.............
#   ............6.............
#   ............7.............
#   ............8.............
#   ............9.............
#   ..........................
#   ..........................
#   ...........s..............
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#
#   == D 3 ==
#
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   .........2345.............
#   ........1...6.............
#   ........H...7.............
#   ............8.............
#   ............9.............
#   ..........................
#   ..........................
#   ...........s..............
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#
#   == R 17 ==
#
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ................987654321H
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ...........s..............
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#
#   == D 10 ==
#
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ...........s.........98765
#   .........................4
#   .........................3
#   .........................2
#   .........................1
#   .........................H
#
#   == L 25 ==
#
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ...........s..............
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   H123456789................
#
#   == U 20 ==
#
#   H.........................
#   1.........................
#   2.........................
#   3.........................
#   4.........................
#   5.........................
#   6.........................
#   7.........................
#   8.........................
#   9.........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ...........s..............
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#
#   Now, the tail (9) visits 36 positions (including s) at least once:
#
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   ..........................
#   #.........................
#   #.............###.........
#   #............#...#........
#   .#..........#.....#.......
#   ..#..........#.....#......
#   ...#........#.......#.....
#   ....#......s.........#....
#   .....#..............#.....
#   ......#............#......
#   .......#..........#.......
#   ........#........#........
#   .........########.........
#
# Simulate your complete series of motions on a larger rope with ten knots.
# How many positions does the tail of the rope visit at least once?
#
#
# --- Solution ---
#
# The difference here is that we need to consider more than two segments
# of the rope – 10 in total, to be precise. The general approach is similar
# as previously: in a loop, we always move the head of the rope. However,
# this time we need to propagate the movement to multiple segments separately
# (head is the first segment here).
# We proceed as follows: we calculate the difference between two adjacent
# segments (i and i + 1) – if the difference on any axis (X or Y) is bigger
# than 1, then we bring the next segment (i + 1) a little towards the previous
# segment (i).
# The important note is that, contrary to original assumption from the part 1,
# moving the (i + 1) segment to the (i) segment's previous position does not
# work here as expected: the calculated positions are different than expected
# by the task description. Instead, we need to simulate sort of tension force
# in the repo – we move the segment by 1 on each axis there is a difference.
# It is worth to note that if segment (i) is not moved, then we do not need
# to consider the moves of any next segments (hence there is `break` in code).
# After moving all segments, we save the new position of the rope's tail
# (if changed) and we return the number of unique positions as an answer.
#

INPUT_FILE = 'input.txt'


def sign(x):
    if x > 0:
        return 1
    elif x < 0:
        return -1
    else:
        return 0


def main():
    with open(INPUT_FILE, 'r') as file:
        motions = [(motion[0], int(motion[1:]))
                   for motion in file.read().strip().split('\n')]

    DIRECTIONS = {
        'L': [-1, 0],
        'U': [0, 1],
        'R': [1, 0],
        'D': [0, -1],
    }

    positions = [[0, 0] for _ in range(10)]
    head_position = positions[0]
    tail_position = positions[-1]

    visited = set()
    visited.add(tuple(tail_position))

    for direction, distance in motions:
        move = DIRECTIONS[direction]

        for step in range(distance):
            head_position[0] += move[0]
            head_position[1] += move[1]

            for i in range(len(positions) - 1):
                dx = positions[i][0] - positions[i + 1][0]
                dy = positions[i][1] - positions[i + 1][1]

                if any([abs(dx) > 1, abs(dy) > 1]):
                    positions[i + 1][0] += sign(dx)
                    positions[i + 1][1] += sign(dy)
                else:
                    break

            if tuple(tail_position) not in visited:
                visited.add(tuple(tail_position))

    print(len(visited))


if __name__ == '__main__':
    main()
